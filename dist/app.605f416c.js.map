{"version":3,"sources":["app.js"],"names":["sound","document","querySelector","play","sounds","querySelectorAll","timeDisplay","timeSelect","fakeDuration","volume","addEventListener","checkPlaying","paused","src","pause","forEach","option","getAttribute","seconds","Math","floor","minutes","textContent","currentTime","ontimeupdate","elapsed","soundBtn","console","log"],"mappings":";AAAA,IAAMA,EAAQC,SAASC,cAAc,UAC/BC,EAAOF,SAASC,cAAc,SAC9BE,EAASH,SAASI,iBAAiB,cACnCC,EAAcL,SAASC,cAAc,iBACrCK,EAAaN,SAASI,iBAAiB,iBACzCG,EAAe,IACnBR,EAAMS,OAAS,GAEfN,EAAKO,iBAAiB,QAAS,WAC7BC,EAAaX,KAEf,IAAMW,EAAe,SAACX,GAChBA,EAAMY,QACRZ,EAAMG,OACNA,EAAKU,IAAM,2BAEXb,EAAMc,QACNX,EAAKU,IAAM,0BAIfN,EAAWQ,QAAQ,SAACC,GAClBA,EAAON,iBAAiB,QAAS,WAC/BF,EAAgD,GAAjC,KAAKS,aAAa,aAC7BC,IAAAA,EAAUC,KAAKC,MAAMZ,EAAe,IACpCa,EAAUF,KAAKC,MAAMZ,EAAe,IACxCF,EAAYgB,YAAiBD,GAAAA,OAAAA,EAAU,GAAK,IAAMA,EAAUA,EAC1DH,KAAAA,OAAAA,EAAU,GAAK,IAAMA,EAAUA,GAEjClB,EAAMuB,YAAc,MAIxBvB,EAAMwB,aAAe,WACfD,IAAAA,EAAcvB,EAAMuB,YACpBE,EAAUjB,EAAee,EACzBL,EAAUC,KAAKC,MAAMK,EAAU,IAC/BJ,EAAUF,KAAKC,MAAMK,EAAU,IACnCnB,EAAYgB,YAAiBD,GAAAA,OAAAA,EAAU,GAAK,IAAMA,EAAUA,EAC1DH,KAAAA,OAAAA,EAAU,GAAK,IAAMA,EAAUA,GAE7BK,GAAef,IACjBR,EAAMc,QACNd,EAAMuB,YAAc,EACpBpB,EAAKU,IAAM,0BAIfT,EAAOW,QAAQ,SAACW,GACdA,EAAShB,iBAAiB,QAAS,WACjCV,EAAMa,IAAM,KAAKI,aAAa,cAC9BU,QAAQC,IAAI,KAAKX,aAAa,eAC9BN,EAAaX","file":"app.605f416c.js","sourceRoot":"..\\src","sourcesContent":["const sound = document.querySelector(\".sound\");\r\nconst play = document.querySelector(\".play\");\r\nconst sounds = document.querySelectorAll(\".btn-sound\");\r\nconst timeDisplay = document.querySelector(\".time-display\");\r\nconst timeSelect = document.querySelectorAll(\".btn-duration\");\r\nlet fakeDuration = 600;\r\nsound.volume = 0.1;\r\n\r\nplay.addEventListener(\"click\", () => {\r\n  checkPlaying(sound);\r\n});\r\nconst checkPlaying = (sound) => {\r\n  if (sound.paused) {\r\n    sound.play();\r\n    play.src = \"./public/svg/pause.svg\";\r\n  } else {\r\n    sound.pause();\r\n    play.src = \"./public/svg/play.svg\";\r\n  }\r\n};\r\n\r\ntimeSelect.forEach((option) => {\r\n  option.addEventListener(\"click\", function () {\r\n    fakeDuration = this.getAttribute(\"data-time\") * 60;\r\n    let seconds = Math.floor(fakeDuration % 60);\r\n    let minutes = Math.floor(fakeDuration / 60);\r\n    timeDisplay.textContent = `${minutes < 10 ? \"0\" + minutes : minutes}:${\r\n      seconds < 10 ? \"0\" + seconds : seconds\r\n    }`;\r\n    sound.currentTime = 0;\r\n  });\r\n});\r\n\r\nsound.ontimeupdate = function () {\r\n  let currentTime = sound.currentTime;\r\n  let elapsed = fakeDuration - currentTime;\r\n  let seconds = Math.floor(elapsed % 60);\r\n  let minutes = Math.floor(elapsed / 60);\r\n  timeDisplay.textContent = `${minutes < 10 ? \"0\" + minutes : minutes}:${\r\n    seconds < 10 ? \"0\" + seconds : seconds\r\n  }`;\r\n  if (currentTime >= fakeDuration) {\r\n    sound.pause();\r\n    sound.currentTime = 0;\r\n    play.src = \"./public/svg/play.svg\";\r\n  }\r\n};\r\n\r\nsounds.forEach((soundBtn) => {\r\n  soundBtn.addEventListener(\"click\", function () {\r\n    sound.src = this.getAttribute(\"data-sound\");\r\n    console.log(this.getAttribute(\"data-sound\"));\r\n    checkPlaying(sound);\r\n  });\r\n});\r\n"]}